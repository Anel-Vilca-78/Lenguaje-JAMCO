Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COLON
    MAIN
    MOD
    NOT
    OR
    TRUE
    VOID

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration_list declaration
Rule 3     declaration_list -> declaration
Rule 4     declaration -> var_declaration
Rule 5     declaration -> func_declaration
Rule 6     var_declaration -> VAR IDENTIFIER ASSIGN NUMBER SEMICOLON
Rule 7     func_declaration -> FUNC IDENTIFIER LPAREN RPAREN block
Rule 8     block -> LBRACE statement_list RBRACE
Rule 9     statement_list -> statement_list statement
Rule 10    statement_list -> statement
Rule 11    statement -> expression_statement
Rule 12    statement -> compound_statement
Rule 13    statement -> selection_statement
Rule 14    statement -> iteration_statement
Rule 15    expression_statement -> expression SEMICOLON
Rule 16    expression_statement -> SEMICOLON
Rule 17    compound_statement -> LBRACE statement_list RBRACE
Rule 18    selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 19    iteration_statement -> WHILE LPAREN expression RPAREN statement
Rule 20    expression -> IDENTIFIER ASSIGN expression
Rule 21    expression -> simple_expression
Rule 22    simple_expression -> additive_expression relop additive_expression
Rule 23    simple_expression -> additive_expression
Rule 24    additive_expression -> additive_expression addop term
Rule 25    additive_expression -> term
Rule 26    term -> term mulop factor
Rule 27    term -> factor
Rule 28    relop -> LESS
Rule 29    relop -> LESSEQUAL
Rule 30    relop -> GREATER
Rule 31    relop -> GREATEREQUAL
Rule 32    relop -> EQUALS
Rule 33    relop -> NOTEQUAL
Rule 34    addop -> PLUS
Rule 35    addop -> MINUS
Rule 36    mulop -> TIMES
Rule 37    mulop -> DIVIDE
Rule 38    factor -> LPAREN expression RPAREN
Rule 39    factor -> IDENTIFIER
Rule 40    factor -> NUMBER

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 6 20
COLON                : 
DIVIDE               : 37
ELSE                 : 18
EQUALS               : 32
FUNC                 : 7
GREATER              : 30
GREATEREQUAL         : 31
IDENTIFIER           : 6 7 20 39
IF                   : 18
LBRACE               : 8 17
LESS                 : 28
LESSEQUAL            : 29
LPAREN               : 7 18 19 38
MAIN                 : 
MINUS                : 35
MOD                  : 
NOT                  : 
NOTEQUAL             : 33
NUMBER               : 6 40
OR                   : 
PLUS                 : 34
RBRACE               : 8 17
RPAREN               : 7 18 19 38
SEMICOLON            : 6 15 16
TIMES                : 36
TRUE                 : 
VAR                  : 6
VOID                 : 
WHILE                : 19
error                : 

Nonterminals, with rules where they appear

additive_expression  : 22 22 23 24
addop                : 24
block                : 7
compound_statement   : 12
declaration          : 2 3
declaration_list     : 1 2
expression           : 15 18 19 20 38
expression_statement : 11
factor               : 26 27
func_declaration     : 5
iteration_statement  : 14
mulop                : 26
program              : 0
relop                : 22
selection_statement  : 13
simple_expression    : 21
statement            : 9 10 18 18 19
statement_list       : 8 9 17
term                 : 24 25 26
var_declaration      : 4

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration_list declaration
    (3) declaration_list -> . declaration
    (4) declaration -> . var_declaration
    (5) declaration -> . func_declaration
    (6) var_declaration -> . VAR IDENTIFIER ASSIGN NUMBER SEMICOLON
    (7) func_declaration -> . FUNC IDENTIFIER LPAREN RPAREN block

    VAR             shift and go to state 6
    FUNC            shift and go to state 7

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    declaration                    shift and go to state 3
    var_declaration                shift and go to state 4
    func_declaration               shift and go to state 5

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (2) declaration_list -> declaration_list . declaration
    (4) declaration -> . var_declaration
    (5) declaration -> . func_declaration
    (6) var_declaration -> . VAR IDENTIFIER ASSIGN NUMBER SEMICOLON
    (7) func_declaration -> . FUNC IDENTIFIER LPAREN RPAREN block

    $end            reduce using rule 1 (program -> declaration_list .)
    VAR             shift and go to state 6
    FUNC            shift and go to state 7

    declaration                    shift and go to state 8
    var_declaration                shift and go to state 4
    func_declaration               shift and go to state 5

state 3

    (3) declaration_list -> declaration .

    VAR             reduce using rule 3 (declaration_list -> declaration .)
    FUNC            reduce using rule 3 (declaration_list -> declaration .)
    $end            reduce using rule 3 (declaration_list -> declaration .)


state 4

    (4) declaration -> var_declaration .

    VAR             reduce using rule 4 (declaration -> var_declaration .)
    FUNC            reduce using rule 4 (declaration -> var_declaration .)
    $end            reduce using rule 4 (declaration -> var_declaration .)


state 5

    (5) declaration -> func_declaration .

    VAR             reduce using rule 5 (declaration -> func_declaration .)
    FUNC            reduce using rule 5 (declaration -> func_declaration .)
    $end            reduce using rule 5 (declaration -> func_declaration .)


state 6

    (6) var_declaration -> VAR . IDENTIFIER ASSIGN NUMBER SEMICOLON

    IDENTIFIER      shift and go to state 9


state 7

    (7) func_declaration -> FUNC . IDENTIFIER LPAREN RPAREN block

    IDENTIFIER      shift and go to state 10


state 8

    (2) declaration_list -> declaration_list declaration .

    VAR             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    FUNC            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration_list declaration .)


state 9

    (6) var_declaration -> VAR IDENTIFIER . ASSIGN NUMBER SEMICOLON

    ASSIGN          shift and go to state 11


state 10

    (7) func_declaration -> FUNC IDENTIFIER . LPAREN RPAREN block

    LPAREN          shift and go to state 12


state 11

    (6) var_declaration -> VAR IDENTIFIER ASSIGN . NUMBER SEMICOLON

    NUMBER          shift and go to state 13


state 12

    (7) func_declaration -> FUNC IDENTIFIER LPAREN . RPAREN block

    RPAREN          shift and go to state 14


state 13

    (6) var_declaration -> VAR IDENTIFIER ASSIGN NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 15


state 14

    (7) func_declaration -> FUNC IDENTIFIER LPAREN RPAREN . block
    (8) block -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 17

    block                          shift and go to state 16

state 15

    (6) var_declaration -> VAR IDENTIFIER ASSIGN NUMBER SEMICOLON .

    VAR             reduce using rule 6 (var_declaration -> VAR IDENTIFIER ASSIGN NUMBER SEMICOLON .)
    FUNC            reduce using rule 6 (var_declaration -> VAR IDENTIFIER ASSIGN NUMBER SEMICOLON .)
    $end            reduce using rule 6 (var_declaration -> VAR IDENTIFIER ASSIGN NUMBER SEMICOLON .)


state 16

    (7) func_declaration -> FUNC IDENTIFIER LPAREN RPAREN block .

    VAR             reduce using rule 7 (func_declaration -> FUNC IDENTIFIER LPAREN RPAREN block .)
    FUNC            reduce using rule 7 (func_declaration -> FUNC IDENTIFIER LPAREN RPAREN block .)
    $end            reduce using rule 7 (func_declaration -> FUNC IDENTIFIER LPAREN RPAREN block .)


state 17

    (8) block -> LBRACE . statement_list RBRACE
    (9) statement_list -> . statement_list statement
    (10) statement_list -> . statement
    (11) statement -> . expression_statement
    (12) statement -> . compound_statement
    (13) statement -> . selection_statement
    (14) statement -> . iteration_statement
    (15) expression_statement -> . expression SEMICOLON
    (16) expression_statement -> . SEMICOLON
    (17) compound_statement -> . LBRACE statement_list RBRACE
    (18) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (19) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (20) expression -> . IDENTIFIER ASSIGN expression
    (21) expression -> . simple_expression
    (22) simple_expression -> . additive_expression relop additive_expression
    (23) simple_expression -> . additive_expression
    (24) additive_expression -> . additive_expression addop term
    (25) additive_expression -> . term
    (26) term -> . term mulop factor
    (27) term -> . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . IDENTIFIER
    (40) factor -> . NUMBER

    SEMICOLON       shift and go to state 26
    LBRACE          shift and go to state 18
    IF              shift and go to state 27
    WHILE           shift and go to state 29
    IDENTIFIER      shift and go to state 30
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 35

    statement_list                 shift and go to state 19
    statement                      shift and go to state 20
    expression_statement           shift and go to state 21
    compound_statement             shift and go to state 22
    selection_statement            shift and go to state 23
    iteration_statement            shift and go to state 24
    expression                     shift and go to state 25
    simple_expression              shift and go to state 31
    additive_expression            shift and go to state 32
    term                           shift and go to state 33
    factor                         shift and go to state 34

state 18

    (17) compound_statement -> LBRACE . statement_list RBRACE
    (9) statement_list -> . statement_list statement
    (10) statement_list -> . statement
    (11) statement -> . expression_statement
    (12) statement -> . compound_statement
    (13) statement -> . selection_statement
    (14) statement -> . iteration_statement
    (15) expression_statement -> . expression SEMICOLON
    (16) expression_statement -> . SEMICOLON
    (17) compound_statement -> . LBRACE statement_list RBRACE
    (18) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (19) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (20) expression -> . IDENTIFIER ASSIGN expression
    (21) expression -> . simple_expression
    (22) simple_expression -> . additive_expression relop additive_expression
    (23) simple_expression -> . additive_expression
    (24) additive_expression -> . additive_expression addop term
    (25) additive_expression -> . term
    (26) term -> . term mulop factor
    (27) term -> . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . IDENTIFIER
    (40) factor -> . NUMBER

    SEMICOLON       shift and go to state 26
    LBRACE          shift and go to state 18
    IF              shift and go to state 27
    WHILE           shift and go to state 29
    IDENTIFIER      shift and go to state 30
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 35

    statement_list                 shift and go to state 36
    statement                      shift and go to state 20
    expression_statement           shift and go to state 21
    compound_statement             shift and go to state 22
    selection_statement            shift and go to state 23
    iteration_statement            shift and go to state 24
    expression                     shift and go to state 25
    simple_expression              shift and go to state 31
    additive_expression            shift and go to state 32
    term                           shift and go to state 33
    factor                         shift and go to state 34

state 19

    (8) block -> LBRACE statement_list . RBRACE
    (9) statement_list -> statement_list . statement
    (11) statement -> . expression_statement
    (12) statement -> . compound_statement
    (13) statement -> . selection_statement
    (14) statement -> . iteration_statement
    (15) expression_statement -> . expression SEMICOLON
    (16) expression_statement -> . SEMICOLON
    (17) compound_statement -> . LBRACE statement_list RBRACE
    (18) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (19) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (20) expression -> . IDENTIFIER ASSIGN expression
    (21) expression -> . simple_expression
    (22) simple_expression -> . additive_expression relop additive_expression
    (23) simple_expression -> . additive_expression
    (24) additive_expression -> . additive_expression addop term
    (25) additive_expression -> . term
    (26) term -> . term mulop factor
    (27) term -> . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . IDENTIFIER
    (40) factor -> . NUMBER

    RBRACE          shift and go to state 37
    SEMICOLON       shift and go to state 26
    LBRACE          shift and go to state 18
    IF              shift and go to state 27
    WHILE           shift and go to state 29
    IDENTIFIER      shift and go to state 30
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 35

    statement                      shift and go to state 38
    expression_statement           shift and go to state 21
    compound_statement             shift and go to state 22
    selection_statement            shift and go to state 23
    iteration_statement            shift and go to state 24
    expression                     shift and go to state 25
    simple_expression              shift and go to state 31
    additive_expression            shift and go to state 32
    term                           shift and go to state 33
    factor                         shift and go to state 34

state 20

    (10) statement_list -> statement .

    RBRACE          reduce using rule 10 (statement_list -> statement .)
    SEMICOLON       reduce using rule 10 (statement_list -> statement .)
    LBRACE          reduce using rule 10 (statement_list -> statement .)
    IF              reduce using rule 10 (statement_list -> statement .)
    WHILE           reduce using rule 10 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 10 (statement_list -> statement .)
    LPAREN          reduce using rule 10 (statement_list -> statement .)
    NUMBER          reduce using rule 10 (statement_list -> statement .)


state 21

    (11) statement -> expression_statement .

    RBRACE          reduce using rule 11 (statement -> expression_statement .)
    SEMICOLON       reduce using rule 11 (statement -> expression_statement .)
    LBRACE          reduce using rule 11 (statement -> expression_statement .)
    IF              reduce using rule 11 (statement -> expression_statement .)
    WHILE           reduce using rule 11 (statement -> expression_statement .)
    IDENTIFIER      reduce using rule 11 (statement -> expression_statement .)
    LPAREN          reduce using rule 11 (statement -> expression_statement .)
    NUMBER          reduce using rule 11 (statement -> expression_statement .)
    ELSE            reduce using rule 11 (statement -> expression_statement .)


state 22

    (12) statement -> compound_statement .

    RBRACE          reduce using rule 12 (statement -> compound_statement .)
    SEMICOLON       reduce using rule 12 (statement -> compound_statement .)
    LBRACE          reduce using rule 12 (statement -> compound_statement .)
    IF              reduce using rule 12 (statement -> compound_statement .)
    WHILE           reduce using rule 12 (statement -> compound_statement .)
    IDENTIFIER      reduce using rule 12 (statement -> compound_statement .)
    LPAREN          reduce using rule 12 (statement -> compound_statement .)
    NUMBER          reduce using rule 12 (statement -> compound_statement .)
    ELSE            reduce using rule 12 (statement -> compound_statement .)


state 23

    (13) statement -> selection_statement .

    RBRACE          reduce using rule 13 (statement -> selection_statement .)
    SEMICOLON       reduce using rule 13 (statement -> selection_statement .)
    LBRACE          reduce using rule 13 (statement -> selection_statement .)
    IF              reduce using rule 13 (statement -> selection_statement .)
    WHILE           reduce using rule 13 (statement -> selection_statement .)
    IDENTIFIER      reduce using rule 13 (statement -> selection_statement .)
    LPAREN          reduce using rule 13 (statement -> selection_statement .)
    NUMBER          reduce using rule 13 (statement -> selection_statement .)
    ELSE            reduce using rule 13 (statement -> selection_statement .)


state 24

    (14) statement -> iteration_statement .

    RBRACE          reduce using rule 14 (statement -> iteration_statement .)
    SEMICOLON       reduce using rule 14 (statement -> iteration_statement .)
    LBRACE          reduce using rule 14 (statement -> iteration_statement .)
    IF              reduce using rule 14 (statement -> iteration_statement .)
    WHILE           reduce using rule 14 (statement -> iteration_statement .)
    IDENTIFIER      reduce using rule 14 (statement -> iteration_statement .)
    LPAREN          reduce using rule 14 (statement -> iteration_statement .)
    NUMBER          reduce using rule 14 (statement -> iteration_statement .)
    ELSE            reduce using rule 14 (statement -> iteration_statement .)


state 25

    (15) expression_statement -> expression . SEMICOLON

    SEMICOLON       shift and go to state 39


state 26

    (16) expression_statement -> SEMICOLON .

    RBRACE          reduce using rule 16 (expression_statement -> SEMICOLON .)
    SEMICOLON       reduce using rule 16 (expression_statement -> SEMICOLON .)
    LBRACE          reduce using rule 16 (expression_statement -> SEMICOLON .)
    IF              reduce using rule 16 (expression_statement -> SEMICOLON .)
    WHILE           reduce using rule 16 (expression_statement -> SEMICOLON .)
    IDENTIFIER      reduce using rule 16 (expression_statement -> SEMICOLON .)
    LPAREN          reduce using rule 16 (expression_statement -> SEMICOLON .)
    NUMBER          reduce using rule 16 (expression_statement -> SEMICOLON .)
    ELSE            reduce using rule 16 (expression_statement -> SEMICOLON .)


state 27

    (18) selection_statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 40


state 28

    (38) factor -> LPAREN . expression RPAREN
    (20) expression -> . IDENTIFIER ASSIGN expression
    (21) expression -> . simple_expression
    (22) simple_expression -> . additive_expression relop additive_expression
    (23) simple_expression -> . additive_expression
    (24) additive_expression -> . additive_expression addop term
    (25) additive_expression -> . term
    (26) term -> . term mulop factor
    (27) term -> . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . IDENTIFIER
    (40) factor -> . NUMBER

    IDENTIFIER      shift and go to state 30
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 35

    expression                     shift and go to state 41
    simple_expression              shift and go to state 31
    additive_expression            shift and go to state 32
    term                           shift and go to state 33
    factor                         shift and go to state 34

state 29

    (19) iteration_statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 42


state 30

    (20) expression -> IDENTIFIER . ASSIGN expression
    (39) factor -> IDENTIFIER .

    ASSIGN          shift and go to state 43
    TIMES           reduce using rule 39 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 39 (factor -> IDENTIFIER .)
    LESS            reduce using rule 39 (factor -> IDENTIFIER .)
    LESSEQUAL       reduce using rule 39 (factor -> IDENTIFIER .)
    GREATER         reduce using rule 39 (factor -> IDENTIFIER .)
    GREATEREQUAL    reduce using rule 39 (factor -> IDENTIFIER .)
    EQUALS          reduce using rule 39 (factor -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 39 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 39 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 39 (factor -> IDENTIFIER .)
    SEMICOLON       reduce using rule 39 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 39 (factor -> IDENTIFIER .)


state 31

    (21) expression -> simple_expression .

    SEMICOLON       reduce using rule 21 (expression -> simple_expression .)
    RPAREN          reduce using rule 21 (expression -> simple_expression .)


state 32

    (22) simple_expression -> additive_expression . relop additive_expression
    (23) simple_expression -> additive_expression .
    (24) additive_expression -> additive_expression . addop term
    (28) relop -> . LESS
    (29) relop -> . LESSEQUAL
    (30) relop -> . GREATER
    (31) relop -> . GREATEREQUAL
    (32) relop -> . EQUALS
    (33) relop -> . NOTEQUAL
    (34) addop -> . PLUS
    (35) addop -> . MINUS

    SEMICOLON       reduce using rule 23 (simple_expression -> additive_expression .)
    RPAREN          reduce using rule 23 (simple_expression -> additive_expression .)
    LESS            shift and go to state 46
    LESSEQUAL       shift and go to state 47
    GREATER         shift and go to state 48
    GREATEREQUAL    shift and go to state 49
    EQUALS          shift and go to state 50
    NOTEQUAL        shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53

    relop                          shift and go to state 44
    addop                          shift and go to state 45

state 33

    (25) additive_expression -> term .
    (26) term -> term . mulop factor
    (36) mulop -> . TIMES
    (37) mulop -> . DIVIDE

    LESS            reduce using rule 25 (additive_expression -> term .)
    LESSEQUAL       reduce using rule 25 (additive_expression -> term .)
    GREATER         reduce using rule 25 (additive_expression -> term .)
    GREATEREQUAL    reduce using rule 25 (additive_expression -> term .)
    EQUALS          reduce using rule 25 (additive_expression -> term .)
    NOTEQUAL        reduce using rule 25 (additive_expression -> term .)
    PLUS            reduce using rule 25 (additive_expression -> term .)
    MINUS           reduce using rule 25 (additive_expression -> term .)
    SEMICOLON       reduce using rule 25 (additive_expression -> term .)
    RPAREN          reduce using rule 25 (additive_expression -> term .)
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56

    mulop                          shift and go to state 54

state 34

    (27) term -> factor .

    TIMES           reduce using rule 27 (term -> factor .)
    DIVIDE          reduce using rule 27 (term -> factor .)
    LESS            reduce using rule 27 (term -> factor .)
    LESSEQUAL       reduce using rule 27 (term -> factor .)
    GREATER         reduce using rule 27 (term -> factor .)
    GREATEREQUAL    reduce using rule 27 (term -> factor .)
    EQUALS          reduce using rule 27 (term -> factor .)
    NOTEQUAL        reduce using rule 27 (term -> factor .)
    PLUS            reduce using rule 27 (term -> factor .)
    MINUS           reduce using rule 27 (term -> factor .)
    SEMICOLON       reduce using rule 27 (term -> factor .)
    RPAREN          reduce using rule 27 (term -> factor .)


state 35

    (40) factor -> NUMBER .

    TIMES           reduce using rule 40 (factor -> NUMBER .)
    DIVIDE          reduce using rule 40 (factor -> NUMBER .)
    LESS            reduce using rule 40 (factor -> NUMBER .)
    LESSEQUAL       reduce using rule 40 (factor -> NUMBER .)
    GREATER         reduce using rule 40 (factor -> NUMBER .)
    GREATEREQUAL    reduce using rule 40 (factor -> NUMBER .)
    EQUALS          reduce using rule 40 (factor -> NUMBER .)
    NOTEQUAL        reduce using rule 40 (factor -> NUMBER .)
    PLUS            reduce using rule 40 (factor -> NUMBER .)
    MINUS           reduce using rule 40 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 40 (factor -> NUMBER .)
    RPAREN          reduce using rule 40 (factor -> NUMBER .)


state 36

    (17) compound_statement -> LBRACE statement_list . RBRACE
    (9) statement_list -> statement_list . statement
    (11) statement -> . expression_statement
    (12) statement -> . compound_statement
    (13) statement -> . selection_statement
    (14) statement -> . iteration_statement
    (15) expression_statement -> . expression SEMICOLON
    (16) expression_statement -> . SEMICOLON
    (17) compound_statement -> . LBRACE statement_list RBRACE
    (18) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (19) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (20) expression -> . IDENTIFIER ASSIGN expression
    (21) expression -> . simple_expression
    (22) simple_expression -> . additive_expression relop additive_expression
    (23) simple_expression -> . additive_expression
    (24) additive_expression -> . additive_expression addop term
    (25) additive_expression -> . term
    (26) term -> . term mulop factor
    (27) term -> . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . IDENTIFIER
    (40) factor -> . NUMBER

    RBRACE          shift and go to state 57
    SEMICOLON       shift and go to state 26
    LBRACE          shift and go to state 18
    IF              shift and go to state 27
    WHILE           shift and go to state 29
    IDENTIFIER      shift and go to state 30
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 35

    statement                      shift and go to state 38
    expression_statement           shift and go to state 21
    compound_statement             shift and go to state 22
    selection_statement            shift and go to state 23
    iteration_statement            shift and go to state 24
    expression                     shift and go to state 25
    simple_expression              shift and go to state 31
    additive_expression            shift and go to state 32
    term                           shift and go to state 33
    factor                         shift and go to state 34

state 37

    (8) block -> LBRACE statement_list RBRACE .

    VAR             reduce using rule 8 (block -> LBRACE statement_list RBRACE .)
    FUNC            reduce using rule 8 (block -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 8 (block -> LBRACE statement_list RBRACE .)


state 38

    (9) statement_list -> statement_list statement .

    RBRACE          reduce using rule 9 (statement_list -> statement_list statement .)
    SEMICOLON       reduce using rule 9 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 9 (statement_list -> statement_list statement .)
    IF              reduce using rule 9 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 9 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 9 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 9 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 9 (statement_list -> statement_list statement .)


state 39

    (15) expression_statement -> expression SEMICOLON .

    RBRACE          reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    SEMICOLON       reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    LBRACE          reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    IF              reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    WHILE           reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 15 (expression_statement -> expression SEMICOLON .)
    ELSE            reduce using rule 15 (expression_statement -> expression SEMICOLON .)


state 40

    (18) selection_statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (20) expression -> . IDENTIFIER ASSIGN expression
    (21) expression -> . simple_expression
    (22) simple_expression -> . additive_expression relop additive_expression
    (23) simple_expression -> . additive_expression
    (24) additive_expression -> . additive_expression addop term
    (25) additive_expression -> . term
    (26) term -> . term mulop factor
    (27) term -> . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . IDENTIFIER
    (40) factor -> . NUMBER

    IDENTIFIER      shift and go to state 30
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 35

    expression                     shift and go to state 58
    simple_expression              shift and go to state 31
    additive_expression            shift and go to state 32
    term                           shift and go to state 33
    factor                         shift and go to state 34

state 41

    (38) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 59


state 42

    (19) iteration_statement -> WHILE LPAREN . expression RPAREN statement
    (20) expression -> . IDENTIFIER ASSIGN expression
    (21) expression -> . simple_expression
    (22) simple_expression -> . additive_expression relop additive_expression
    (23) simple_expression -> . additive_expression
    (24) additive_expression -> . additive_expression addop term
    (25) additive_expression -> . term
    (26) term -> . term mulop factor
    (27) term -> . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . IDENTIFIER
    (40) factor -> . NUMBER

    IDENTIFIER      shift and go to state 30
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 35

    expression                     shift and go to state 60
    simple_expression              shift and go to state 31
    additive_expression            shift and go to state 32
    term                           shift and go to state 33
    factor                         shift and go to state 34

state 43

    (20) expression -> IDENTIFIER ASSIGN . expression
    (20) expression -> . IDENTIFIER ASSIGN expression
    (21) expression -> . simple_expression
    (22) simple_expression -> . additive_expression relop additive_expression
    (23) simple_expression -> . additive_expression
    (24) additive_expression -> . additive_expression addop term
    (25) additive_expression -> . term
    (26) term -> . term mulop factor
    (27) term -> . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . IDENTIFIER
    (40) factor -> . NUMBER

    IDENTIFIER      shift and go to state 30
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 35

    expression                     shift and go to state 61
    simple_expression              shift and go to state 31
    additive_expression            shift and go to state 32
    term                           shift and go to state 33
    factor                         shift and go to state 34

state 44

    (22) simple_expression -> additive_expression relop . additive_expression
    (24) additive_expression -> . additive_expression addop term
    (25) additive_expression -> . term
    (26) term -> . term mulop factor
    (27) term -> . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . IDENTIFIER
    (40) factor -> . NUMBER

    LPAREN          shift and go to state 28
    IDENTIFIER      shift and go to state 63
    NUMBER          shift and go to state 35

    additive_expression            shift and go to state 62
    term                           shift and go to state 33
    factor                         shift and go to state 34

state 45

    (24) additive_expression -> additive_expression addop . term
    (26) term -> . term mulop factor
    (27) term -> . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . IDENTIFIER
    (40) factor -> . NUMBER

    LPAREN          shift and go to state 28
    IDENTIFIER      shift and go to state 63
    NUMBER          shift and go to state 35

    term                           shift and go to state 64
    factor                         shift and go to state 34

state 46

    (28) relop -> LESS .

    LPAREN          reduce using rule 28 (relop -> LESS .)
    IDENTIFIER      reduce using rule 28 (relop -> LESS .)
    NUMBER          reduce using rule 28 (relop -> LESS .)


state 47

    (29) relop -> LESSEQUAL .

    LPAREN          reduce using rule 29 (relop -> LESSEQUAL .)
    IDENTIFIER      reduce using rule 29 (relop -> LESSEQUAL .)
    NUMBER          reduce using rule 29 (relop -> LESSEQUAL .)


state 48

    (30) relop -> GREATER .

    LPAREN          reduce using rule 30 (relop -> GREATER .)
    IDENTIFIER      reduce using rule 30 (relop -> GREATER .)
    NUMBER          reduce using rule 30 (relop -> GREATER .)


state 49

    (31) relop -> GREATEREQUAL .

    LPAREN          reduce using rule 31 (relop -> GREATEREQUAL .)
    IDENTIFIER      reduce using rule 31 (relop -> GREATEREQUAL .)
    NUMBER          reduce using rule 31 (relop -> GREATEREQUAL .)


state 50

    (32) relop -> EQUALS .

    LPAREN          reduce using rule 32 (relop -> EQUALS .)
    IDENTIFIER      reduce using rule 32 (relop -> EQUALS .)
    NUMBER          reduce using rule 32 (relop -> EQUALS .)


state 51

    (33) relop -> NOTEQUAL .

    LPAREN          reduce using rule 33 (relop -> NOTEQUAL .)
    IDENTIFIER      reduce using rule 33 (relop -> NOTEQUAL .)
    NUMBER          reduce using rule 33 (relop -> NOTEQUAL .)


state 52

    (34) addop -> PLUS .

    LPAREN          reduce using rule 34 (addop -> PLUS .)
    IDENTIFIER      reduce using rule 34 (addop -> PLUS .)
    NUMBER          reduce using rule 34 (addop -> PLUS .)


state 53

    (35) addop -> MINUS .

    LPAREN          reduce using rule 35 (addop -> MINUS .)
    IDENTIFIER      reduce using rule 35 (addop -> MINUS .)
    NUMBER          reduce using rule 35 (addop -> MINUS .)


state 54

    (26) term -> term mulop . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . IDENTIFIER
    (40) factor -> . NUMBER

    LPAREN          shift and go to state 28
    IDENTIFIER      shift and go to state 63
    NUMBER          shift and go to state 35

    factor                         shift and go to state 65

state 55

    (36) mulop -> TIMES .

    LPAREN          reduce using rule 36 (mulop -> TIMES .)
    IDENTIFIER      reduce using rule 36 (mulop -> TIMES .)
    NUMBER          reduce using rule 36 (mulop -> TIMES .)


state 56

    (37) mulop -> DIVIDE .

    LPAREN          reduce using rule 37 (mulop -> DIVIDE .)
    IDENTIFIER      reduce using rule 37 (mulop -> DIVIDE .)
    NUMBER          reduce using rule 37 (mulop -> DIVIDE .)


state 57

    (17) compound_statement -> LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 17 (compound_statement -> LBRACE statement_list RBRACE .)
    SEMICOLON       reduce using rule 17 (compound_statement -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 17 (compound_statement -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 17 (compound_statement -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 17 (compound_statement -> LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 17 (compound_statement -> LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 17 (compound_statement -> LBRACE statement_list RBRACE .)
    NUMBER          reduce using rule 17 (compound_statement -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 17 (compound_statement -> LBRACE statement_list RBRACE .)


state 58

    (18) selection_statement -> IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN          shift and go to state 66


state 59

    (38) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    LESSEQUAL       reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    GREATEREQUAL    reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 38 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 38 (factor -> LPAREN expression RPAREN .)


state 60

    (19) iteration_statement -> WHILE LPAREN expression . RPAREN statement

    RPAREN          shift and go to state 67


state 61

    (20) expression -> IDENTIFIER ASSIGN expression .

    SEMICOLON       reduce using rule 20 (expression -> IDENTIFIER ASSIGN expression .)
    RPAREN          reduce using rule 20 (expression -> IDENTIFIER ASSIGN expression .)


state 62

    (22) simple_expression -> additive_expression relop additive_expression .
    (24) additive_expression -> additive_expression . addop term
    (34) addop -> . PLUS
    (35) addop -> . MINUS

    SEMICOLON       reduce using rule 22 (simple_expression -> additive_expression relop additive_expression .)
    RPAREN          reduce using rule 22 (simple_expression -> additive_expression relop additive_expression .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53

    addop                          shift and go to state 45

state 63

    (39) factor -> IDENTIFIER .

    TIMES           reduce using rule 39 (factor -> IDENTIFIER .)
    DIVIDE          reduce using rule 39 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 39 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 39 (factor -> IDENTIFIER .)
    SEMICOLON       reduce using rule 39 (factor -> IDENTIFIER .)
    RPAREN          reduce using rule 39 (factor -> IDENTIFIER .)
    LESS            reduce using rule 39 (factor -> IDENTIFIER .)
    LESSEQUAL       reduce using rule 39 (factor -> IDENTIFIER .)
    GREATER         reduce using rule 39 (factor -> IDENTIFIER .)
    GREATEREQUAL    reduce using rule 39 (factor -> IDENTIFIER .)
    EQUALS          reduce using rule 39 (factor -> IDENTIFIER .)
    NOTEQUAL        reduce using rule 39 (factor -> IDENTIFIER .)


state 64

    (24) additive_expression -> additive_expression addop term .
    (26) term -> term . mulop factor
    (36) mulop -> . TIMES
    (37) mulop -> . DIVIDE

    LESS            reduce using rule 24 (additive_expression -> additive_expression addop term .)
    LESSEQUAL       reduce using rule 24 (additive_expression -> additive_expression addop term .)
    GREATER         reduce using rule 24 (additive_expression -> additive_expression addop term .)
    GREATEREQUAL    reduce using rule 24 (additive_expression -> additive_expression addop term .)
    EQUALS          reduce using rule 24 (additive_expression -> additive_expression addop term .)
    NOTEQUAL        reduce using rule 24 (additive_expression -> additive_expression addop term .)
    PLUS            reduce using rule 24 (additive_expression -> additive_expression addop term .)
    MINUS           reduce using rule 24 (additive_expression -> additive_expression addop term .)
    SEMICOLON       reduce using rule 24 (additive_expression -> additive_expression addop term .)
    RPAREN          reduce using rule 24 (additive_expression -> additive_expression addop term .)
    TIMES           shift and go to state 55
    DIVIDE          shift and go to state 56

    mulop                          shift and go to state 54

state 65

    (26) term -> term mulop factor .

    TIMES           reduce using rule 26 (term -> term mulop factor .)
    DIVIDE          reduce using rule 26 (term -> term mulop factor .)
    LESS            reduce using rule 26 (term -> term mulop factor .)
    LESSEQUAL       reduce using rule 26 (term -> term mulop factor .)
    GREATER         reduce using rule 26 (term -> term mulop factor .)
    GREATEREQUAL    reduce using rule 26 (term -> term mulop factor .)
    EQUALS          reduce using rule 26 (term -> term mulop factor .)
    NOTEQUAL        reduce using rule 26 (term -> term mulop factor .)
    PLUS            reduce using rule 26 (term -> term mulop factor .)
    MINUS           reduce using rule 26 (term -> term mulop factor .)
    SEMICOLON       reduce using rule 26 (term -> term mulop factor .)
    RPAREN          reduce using rule 26 (term -> term mulop factor .)


state 66

    (18) selection_statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (11) statement -> . expression_statement
    (12) statement -> . compound_statement
    (13) statement -> . selection_statement
    (14) statement -> . iteration_statement
    (15) expression_statement -> . expression SEMICOLON
    (16) expression_statement -> . SEMICOLON
    (17) compound_statement -> . LBRACE statement_list RBRACE
    (18) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (19) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (20) expression -> . IDENTIFIER ASSIGN expression
    (21) expression -> . simple_expression
    (22) simple_expression -> . additive_expression relop additive_expression
    (23) simple_expression -> . additive_expression
    (24) additive_expression -> . additive_expression addop term
    (25) additive_expression -> . term
    (26) term -> . term mulop factor
    (27) term -> . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . IDENTIFIER
    (40) factor -> . NUMBER

    SEMICOLON       shift and go to state 26
    LBRACE          shift and go to state 18
    IF              shift and go to state 27
    WHILE           shift and go to state 29
    IDENTIFIER      shift and go to state 30
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 35

    expression                     shift and go to state 25
    statement                      shift and go to state 68
    expression_statement           shift and go to state 21
    compound_statement             shift and go to state 22
    selection_statement            shift and go to state 23
    iteration_statement            shift and go to state 24
    simple_expression              shift and go to state 31
    additive_expression            shift and go to state 32
    term                           shift and go to state 33
    factor                         shift and go to state 34

state 67

    (19) iteration_statement -> WHILE LPAREN expression RPAREN . statement
    (11) statement -> . expression_statement
    (12) statement -> . compound_statement
    (13) statement -> . selection_statement
    (14) statement -> . iteration_statement
    (15) expression_statement -> . expression SEMICOLON
    (16) expression_statement -> . SEMICOLON
    (17) compound_statement -> . LBRACE statement_list RBRACE
    (18) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (19) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (20) expression -> . IDENTIFIER ASSIGN expression
    (21) expression -> . simple_expression
    (22) simple_expression -> . additive_expression relop additive_expression
    (23) simple_expression -> . additive_expression
    (24) additive_expression -> . additive_expression addop term
    (25) additive_expression -> . term
    (26) term -> . term mulop factor
    (27) term -> . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . IDENTIFIER
    (40) factor -> . NUMBER

    SEMICOLON       shift and go to state 26
    LBRACE          shift and go to state 18
    IF              shift and go to state 27
    WHILE           shift and go to state 29
    IDENTIFIER      shift and go to state 30
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 35

    expression                     shift and go to state 25
    statement                      shift and go to state 69
    expression_statement           shift and go to state 21
    compound_statement             shift and go to state 22
    selection_statement            shift and go to state 23
    iteration_statement            shift and go to state 24
    simple_expression              shift and go to state 31
    additive_expression            shift and go to state 32
    term                           shift and go to state 33
    factor                         shift and go to state 34

state 68

    (18) selection_statement -> IF LPAREN expression RPAREN statement . ELSE statement

    ELSE            shift and go to state 70


state 69

    (19) iteration_statement -> WHILE LPAREN expression RPAREN statement .

    RBRACE          reduce using rule 19 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    SEMICOLON       reduce using rule 19 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 19 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 19 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 19 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 19 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 19 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    NUMBER          reduce using rule 19 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 19 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)


state 70

    (18) selection_statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (11) statement -> . expression_statement
    (12) statement -> . compound_statement
    (13) statement -> . selection_statement
    (14) statement -> . iteration_statement
    (15) expression_statement -> . expression SEMICOLON
    (16) expression_statement -> . SEMICOLON
    (17) compound_statement -> . LBRACE statement_list RBRACE
    (18) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (19) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (20) expression -> . IDENTIFIER ASSIGN expression
    (21) expression -> . simple_expression
    (22) simple_expression -> . additive_expression relop additive_expression
    (23) simple_expression -> . additive_expression
    (24) additive_expression -> . additive_expression addop term
    (25) additive_expression -> . term
    (26) term -> . term mulop factor
    (27) term -> . factor
    (38) factor -> . LPAREN expression RPAREN
    (39) factor -> . IDENTIFIER
    (40) factor -> . NUMBER

    SEMICOLON       shift and go to state 26
    LBRACE          shift and go to state 18
    IF              shift and go to state 27
    WHILE           shift and go to state 29
    IDENTIFIER      shift and go to state 30
    LPAREN          shift and go to state 28
    NUMBER          shift and go to state 35

    expression                     shift and go to state 25
    statement                      shift and go to state 71
    expression_statement           shift and go to state 21
    compound_statement             shift and go to state 22
    selection_statement            shift and go to state 23
    iteration_statement            shift and go to state 24
    simple_expression              shift and go to state 31
    additive_expression            shift and go to state 32
    term                           shift and go to state 33
    factor                         shift and go to state 34

state 71

    (18) selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .

    RBRACE          reduce using rule 18 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    SEMICOLON       reduce using rule 18 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 18 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 18 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 18 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IDENTIFIER      reduce using rule 18 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 18 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    NUMBER          reduce using rule 18 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 18 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)

